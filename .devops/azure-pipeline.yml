jobs:
- job: snapshot_build
  displayName: Create Snapshot Build Number
  pool:
    vmImage: "ubuntu-latest"
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
    - script: |
        pip install -U pip
        pip install toml
        python .devops/create_snapshot_version.py packages/pyo3/Cargo.toml "$BUILD_BUILDNUMBER"
      displayName: "Create Version Number"
    - publish: packages/pyo3/Cargo.toml
      artifact: cargotoml
- job: rust_build
  dependsOn: snapshot_build
  displayName: Rust Build
  pool:
    vmImage: "ubuntu-latest"
  steps:
    - task: Rust@1
      inputs:
        installNightly: true
    - script: |
        cd packages/network_partitions
        cargo test
        cd ../packages/cli
        cargo test
        cargo build --release
- job: cred_scan
  dependsOn: rust_build
  displayName: Cred Scan
  pool:
    vmImage: "windows-latest"
  steps:
    - task: CredScan@3
      displayName: 'Run CredScan'
      inputs:
        outputFormat: sarif
        debugMode: false
- job: python_build
  displayName: Python Build
  dependsOn: rust_build
  strategy:
    matrix:
      linux_p36: 
        os: "ubuntu-latest"
        python_version: "3.6"
      linux_p37:
        os: "ubuntu-latest"
        python_version: "3.7"
      linux_p38:
        os: "ubuntu-latest"
        python_version: "3.8"
      mac_p36:
        os: "macos-latest"
        python_version: "3.6"
      mac_p37:
        os: "macos-latest"
        python_version: "3.7"
      mac_p38:
        os: "macos-latest"
        python_version: "3.8"
      windows_p36:
        os: "windows-latest"
        python_version: "3.6"
      windows_p37:
        os: "windows-latest"
        python_version: "3.7"
      windows_p38:
        os: "windows-latest"
        python_version: "3.8"
  pool:
    vmImage: $(os)
  steps:
    - download: current
      artifact: cargotoml
    - task: Rust@1
      inputs:
        installNightly: true
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(python_version)
    - script: |
        pip install -U pip setuptools wheel
        pip install maturin
        cd packages/pyo3
        cp $(Pipeline.Workspace)/cargotoml/Cargo.toml Cargo.toml
        maturin build --release
    - publish: target/wheels
      artifact: drop$(System.JobName)
- job: Publish
  dependsOn: python_build
  pool:
    vmImage: "ubuntu-latest"
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
    - download: current
      patterns: '**/*.whl'
    - script: |
        pip install -U pip
        pip install twine
        twine upload --verbose --repository-url="https://nexus.ess-ex.net/repository/essex-pypi/" $(Pipeline.Workspace)/drop*/*.whl
      displayName: "Upload BDists"
      env: 
        TWINE_USERNAME: $(ESSEXNEXUSUSERNAME)
        TWINE_PASSWORD: $(ESSEXNEXUSPASSWORD)

  
